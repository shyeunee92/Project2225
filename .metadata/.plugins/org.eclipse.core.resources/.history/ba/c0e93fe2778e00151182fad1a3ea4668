package com.project2225.perfectscore;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import android.widget.Toast;

public class MyDBHelper extends SQLiteOpenHelper{
	Context context;
	public MyDBHelper(Context context) {
		//2번째 인자는 만들어지는 sqlite파일 이름이고 4번째 인자는 개발자가 만든 sqlite버전이다.
		super(context, "data.sqlite", null, 1);
		this.context = context;
	}

	//최초에 기존에 없었던 db가 새롭게 만들어질때 1번 호출
	public void onCreate(SQLiteDatabase db) {
		//db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
		String 	sql ="CREATE TABLE 'wa_info_table' ('asidx' int(11) NOT NULL AUTO_INCREMENT, ";
				sql += " 'q_type' int(11) NULL DEFAULT NULL, ";
				sql += " 'q_category' varchar(255) NULL DEFAULT NULL, ";
				
		db.execSQL(
  
  
  `q_title` varchar(1000) NULL DEFAULT NULL,
  `s_list` varchar(1000) NULL DEFAULT NULL,
  `ans` varchar(1000) NULL DEFAULT NULL,
  `as_user` int(11) NULL DEFAULT NULL,
  `is_used` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`asidx`)
) DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;");
	}

	//이미 배포했던 db에 변경이 있을경우 호출된다.
	//주로 버전의 변경이 있을때 호출
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
	}
	
	// 현재 테이블 데이터 모두 삭제 
	public void fnAllDelTable(SQLiteDatabase db){
		db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
	}
}
