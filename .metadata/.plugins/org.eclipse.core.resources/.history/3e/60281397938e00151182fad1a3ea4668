package com.project2225.perfectscore;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import android.widget.Toast;

public class MyDBHelper extends SQLiteOpenHelper{
	Context context;
	public MyDBHelper(Context context) {
		//2번째 인자는 만들어지는 sqlite파일 이름이고 4번째 인자는 개발자가 만든 sqlite버전이다.
		super(context, "data.sqlite", null, 1);
		this.context = context;
	}

	//최초에 기존에 없었던 db가 새롭게 만들어질때 1번 호출
	public void onCreate(SQLiteDatabase db) {
		//db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
		db.execSQL("drop table wa_info_table");
		
		/*String 	sql ="CREATE TABLE wa_info_table ";
				sql += " (asidx INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ";
				sql += " q_type INTEGER NULL, ";
				sql += " q_category VARCHAR(255) NULL, ";
				sql += " q_title VARCHAR(1000) NULL, ";
				sql += " s_list VARCHAR(1000) NULL, ";
				sql += " ans VARCHAR(1000) NULL, ";
				sql += " as_user INTEGER NULL); ";*/
				//sql += " PRIMARY KEY (asidx)); ";
		
		String sql ="CREATE TABLE wa_info_table (asidx INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, q_type INTEGER NULL, q_category TEXT NULL, q_title TEXT NULL, s_list TEXT NULL, ans TEXT NULL, as_user INTEGER NULL);";
		db.execSQL(sql);
  
  
  
  
  
	}

	//이미 배포했던 db에 변경이 있을경우 호출된다.
	//주로 버전의 변경이 있을때 호출
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
	}
	
	// 현재 테이블 데이터 모두 삭제 
	public void fnAllDelTable(SQLiteDatabase db){
		db.execSQL("CREATE TABLE member (name VARCHAR(20), money INTEGER, etc VARCHAR(50));");
	}
}
